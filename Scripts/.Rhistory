Z <- rgamma(100000,1/sigma2,1/sigma2)
mu <- 3
Y <- rpois(100000,mu*Z)
var(Y)
mu + mu^2*sigma2
sigma2 <- 3
Z <- rgamma(100000,1/sigma2,1/sigma2)
mu <- 3
Y <- rpois(100000,mu*Z)
var(Y)
mu + mu^2*sigma2
sigma2 <- 3
Z <- rgamma(100000,1/sigma2,1/sigma2)
mu <- 3
Y <- rpois(100000,mu*Z)
var(Y)
mu + mu^2*sigma2
rm(list=ls())
library(readxl)
library(mefa)
library(glmmTMB)
########################################
######## PART 1
########################################
# Load data
datos=read.csv("prepared_data.csv")
datos$anho_numeric=datos$anho
datos$anho=factor(datos$anho)
datos$mes=factor(datos$mes)
datos$idprovincia=factor(datos$idprovincia)
datos$nombre=factor(datos$nombre)
attach(datos)
setwd("C:/Users/jcortes/My Drive/Docencia/MLGZ/23-24/Practica/Datos")
########################################
######## PART 1
########################################
# Load data
datos=read.csv("prepared_data.csv")
datos$anho_numeric=datos$anho
datos$anho=factor(datos$anho)
########################################
######## PART 1
########################################
# Load data
datos=read.csv("prepared_data.csv")
View(datos)
datos=read.csv("prepared_data.csv")
datos$anho_numeric=datos$anho
datos$anho=factor(datos$anho)
datos$mes=factor(datos$mes)
datos$idprovincia=factor(datos$idprovincia)
datos$nombre=factor(datos$nombre)
attach(datos)
# Fire count by year, month and province
datff=data.frame(aggregate(numero_de_incendios, by=list(anho_numeric, mes, idprovincia), sum))
colnames(datff)=c('anho', 'mes', 'idprovincia', 'recuento')
zeros=datff[datff$recuento==0,]
zeros
View(zeros)
datff=data.frame(aggregate(numero_de_incendios, by=list(anho_numeric, mes, idprovincia), sum))
colnames(datff)=c('anho', 'mes', 'idprovincia', 'recuento')
zeros=datff[datff$recuento==0,]
zeros$cont=1
data.frame(aggregate((numero_de_incendios==0)*1, by=list(idprovincia), sum)) # zeros by province
data.frame(aggregate(zeros$cont, by=list(zeros$mes), sum)) # zeros by month
data.frame(aggregate(zeros$cont, by=list(zeros$anho), sum)) # zeros by year
data.frame(aggregate(numero_de_incendios, by=list(idprovincia), sum)) # wildfires by province
data.frame(aggregate(numero_de_incendios, by=list(mes),sum)) # wildfires by month
data.frame(aggregate(numero_de_incendios, by=list(anho), sum)) # wildfires by year
group_anho3=cut(datos$anho_numeric, breaks=c(2001, 2006, 2012, 2015), labels=c('1', '2', '3'))
fit_poisson<-glm(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro+group_anho3,
data=datos, family=poisson)
summary(fit_poisson)
stepwise(fit_poisson, direction='backward', criterion='AIC') # best AIC	435094
library(RcmdrMisc)
stepwise(fit_poisson, direction='backward', criterion='AIC') # best AIC	435094
fit_binomial<-glm.nb(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro+group_anho3, data=datos)
library(MASS)
fit_binomial<-glm.nb(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro+group_anho3, data=datos)
stepwise(fit_binomial, direction='backward', criterion='AIC') # best 65409
fit_binomial1<-glm.nb(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_300+nt_00+nt_30+n_tor+
nw_55+nw_91+q_mar+q_max+q_min+ta_max+ta_min+tm_mes+tm_min+ts_min+w_med+tasa_de_paro+group_anho3,  data=datos)
summary(fit_binomial1)
fit_binomial2 <- stepwise(fit_binomial, direction='backward', criterion='AIC') # best 65409
summary(fit_binomial2)
View(datos)
58*12*13
names(datos)
table(datos$idprovincia)
8400/50
table(datos$anho)
table(datos$anho, datos$numero_de_incendios==0)
fit_poisson<-glm(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro,
data=datos[datos$anho==2002], family=poisson)
fit_poisson<-glm(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro,
data=datos[datos$anho==2002,], family=poisson)
fit_poisson
fit_poisson<-glm(numero_de_incendios~1+e+hr+n_fog+n_gra+n_llu+n_nie+np_001+np_010+np_100+np_300+
nt_00+nt_30+n_tor+nw_55+nw_91+p_max+p_mes+q_mar+q_max+q_med+q_min+ta_max+ta_min+ti_max+tm_max+
tm_mes+tm_min+ts_min+w_med+tasa_de_paro,
data=datos[datos$anho==2003,], family=poisson)
summary(fit_poisson)
setwd("C:/Users/jcortes/My Drive/Docencia/MLGZ/23-24/Practica/Datos")
rm(list=ls())
setwd("C:/Users/jcortes/My Drive/Docencia/MLGZ/23-24/Practica/Datos")
datos <- read.csv("prepared_data.csv")
ANHO <- unique(datos$anho)
ANHO
ANHO <- unique(datos$anho)
for(y in ANHO){
d <- datos[datos$anho==y,]
write.table(d,file = paste0('datos_'),sep="\t",quote = FALSE,
col.names = TRUE,row.names = FALSE)
}
ANHO <- unique(datos$anho)
for(y in ANHO){
d <- datos[datos$anho==y,]
write.table(d,file = paste0('ficheros/datos_',y,'.txt'),sep="\t",quote = FALSE,
col.names = TRUE,row.names = FALSE)
}
View(d)
names(d)
VAR.RM <- c("superficie_total_quemada","sup_total_arbolada",
"sup_total_desarbolada","naturales_casos",
"naturales_total_arbolada","naturales_total_noarboalda",
"antropicos_casos","sup_antropicos_total_arbolada",
"sup_antropicos_total_noarbolada")
for(y in ANHO){
d <- datos[datos$anho==y,-which(names(datos) %in% VAR.RM)]
write.table(d,file = paste0('ficheros/datos_',y,'.txt'),sep="\t",quote = FALSE,
col.names = TRUE,row.names = FALSE)
}
datos$y_count <- datos$numero_de_incendios
datos$y_bin <- ifelse(datos$y_count>0,1,0)
datos$numero_de_incendios <- NULL
for(y in ANHO){
d <- datos[datos$anho==y,-which(names(datos) %in% VAR.RM)]
write.table(d,file = paste0('ficheros/datos_',y,'.txt'),sep="\t",quote = FALSE,
col.names = TRUE,row.names = FALSE)
}
setwd("C:/Users/jcortes/My Drive/Docencia/PE/Material/D/PE_Bloc_D/Scripts")
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Function ------------------------------------------------------------------
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Temps compressors ---------------------------------------------------------
temps <- data.frame(temps=c(4.85,4.36,5.12,5.64,5.6,5.87,3.91,4.88))
write_table_PE(temps,'temps_compressors')
rm(list=ls())
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
y    = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(temps,'algoritme_dijkstra')
##-- Function ------------------------------------------------------------------
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Temps compressors ---------------------------------------------------------
temps <- data.frame(temps=c(4.85,4.36,5.12,5.64,5.6,5.87,3.91,4.88))
write_table_PE(temps,'temps_compressors')
##-- Algoritme Dijkstra --------------------------------------------------------
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
y    = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(temps,'algoritme_dijkstra')
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
lgt  = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(temps,'algoritme_dijkstra')
rm(list=ls())
##-- Function ------------------------------------------------------------------
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Temps compressors ---------------------------------------------------------
d <- data.frame(temps=c(4.85,4.36,5.12,5.64,5.6,5.87,3.91,4.88))
write_table_PE(d,'temps_compressors')
##-- Algoritme Dijkstra --------------------------------------------------------
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
lgt  = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(temps,'algoritme_dijkstra')
##-- Recorre arbres ------------------------------------------------------------
d <- data.frame(Temps  = c(392,421,540,475,427,411,476,489,499,454,509,432,539,552,518,511,438,532,447,590,566,557,540,501,575,458,476,485),
metode = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3),
nodes  = c(100,140,200,160,120,130,170,180,190,150,160,100,210,200,180,170,140,190,120,190,180,170,160,150,200,110,130,140))
write_table_PE(temps,'recorre_arbres')
rm(list=ls())
##-- Function ------------------------------------------------------------------
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Temps compressors ---------------------------------------------------------
d <- data.frame(temps=c(4.85,4.36,5.12,5.64,5.6,5.87,3.91,4.88))
write_table_PE(d,'temps_compressors')
##-- Algoritme Dijkstra --------------------------------------------------------
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
lgt  = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(d,'algoritme_dijkstra')
##-- Recorre arbres ------------------------------------------------------------
d <- data.frame(Temps  = c(392,421,540,475,427,411,476,489,499,454,509,432,539,552,518,511,438,532,447,590,566,557,540,501,575,458,476,485),
metode = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3),
nodes  = c(100,140,200,160,120,130,170,180,190,150,160,100,210,200,180,170,140,190,120,190,180,170,160,150,200,110,130,140))
write_table_PE(temps,'recorre_arbres')
rm(list=ls())
##-- Function ------------------------------------------------------------------
write_table_PE <- function(x,file_name){
write.table(x         = x,
file      = paste0("../Dades/",file_name,".csv"),
sep       = ',',
col.names = TRUE,
row.names = FALSE,
quote     = FALSE)
}
##-- Temps compressors ---------------------------------------------------------
d <- data.frame(temps=c(4.85,4.36,5.12,5.64,5.6,5.87,3.91,4.88))
write_table_PE(d,'temps_compressors')
##-- Algoritme Dijkstra --------------------------------------------------------
d <- data.frame(nodes= rep(c(250,500,1000), each = 6),
lgt  = c(2.31,4.48,2.59,3.06,2.1,3.95,3.94,6.38,6.52,
5.27,3.72,3.61,6.45,7.32,6.76,6.08,8.35,6.01))
write_table_PE(d,'algoritme_dijkstra')
##-- Recorre arbres ------------------------------------------------------------
d <- data.frame(Temps  = c(392,421,540,475,427,411,476,489,499,454,509,432,539,552,518,511,438,532,447,590,566,557,540,501,575,458,476,485),
metode = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3),
nodes  = c(100,140,200,160,120,130,170,180,190,150,160,100,210,200,180,170,140,190,120,190,180,170,160,150,200,110,130,140))
write_table_PE(d,'recorre_arbres')
d <- data.frame(speed = seq(10,150,10),
fuel  = c(21,13,10,8,7,5.9,6.3,6.95,7.57,8.27,9.03,9.87,9.03,9.87,10.79,11.77,12.83))
write_table_PE(d,'benzina_velocitat')
seq(10,150,10)
##-- Benzina -------------------------------------------------------------------
d <- data.frame(speed = seq(10,150,10),
fuel  = c(21,13,10,8,7,5.9,6.3,6.95,7.57,8.27,9.03,9.87,10.79,11.77,12.83))
write_table_PE(d,'benzina_velocitat')
##-- Cervesa alcohol -----------------------------------------------------------
d <- data.frame(cerveses = c(5,2,9,8,3,7,3,5,3,5,4,6,5,7,1,4),
alcohol  = c(.1,.03,.19,.12,.04,.095,.070,.06,.02,.05,.07,.1,.085,.090,.01,.05))
write_table_PE(d,'cervesa_alcohol')
##-- Cervesa alcohol -----------------------------------------------------------
d <- data.frame( n.cerv = c(5,2,9,8,3,7,3,5,3,5,4,6,5,7,1,4),
alc     = c(.1,.03,.19,.12,.04,.095,.070,.06,.02,.05,.07,.1,.085,.090,.01,.05))
write_table_PE(d,'cervesa_alcohol')
##-- brillantor durada ---------------------------------------------------------
d <- data.frame(Brillantor = 1:10,
Durada     = c(241,193,205,169,174,134,163,124,11,92))
write_table_PE(d,'brillantor_durada')
data(iris)
write_table_PE(iris,'iris')
##-- Temps compressors ---------------------------------------------------------
d <- read.csv('../Dades/temps_compressors')
setwd("C:/Users/jcortes/My Drive/Docencia/PE/Material/D/PE_Bloc_D/Scripts")
##-- Temps compressors ---------------------------------------------------------
d <- read.csv('../Dades/temps_compressors.csv')
d
##-- Temps compressors ---------------------------------------------------------
d <- read.csv('../Dades/algoritme_dijkstra.csv')
mod <- lm(temps~1)
summary(mod)
d <- read.csv('../Dades/algoritme_dijkstra.csv')
mod <- lm(lgt~as.factor(nodes),d)
summary(mod)
# Premissa normalitat
qqnorm(d$lgt)
qqline(d$lgt)
# Premsissa homoscedasticitat
boxplot(lgt~nodes,d)
##-- Paquets -------------------------------------------------------------------
library(emmeans)
# IC95% per les mitjanes dels temps dels nodes
emmeans(mod,~nodes)
mod1 <- lm(lgt~as.factor(metode),d)
summary(mod1)
# Premissa normalitat residus
qqnorm(resid(mod1))
d <- read.csv('../Dades/recorre_arbres.csv')
mod1 <- lm(lgt~as.factor(metode),d)
##-- Recorre arbres ------------------------------------------------------------
d <- data.frame(Temps  = c(392,421,540,475,427,411,476,489,499,454,509,432,539,552,518,511,438,532,447,590,566,557,540,501,575,458,476,485),
metode = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3),
nodes  = c(100,140,200,160,120,130,170,180,190,150,160,100,210,200,180,170,140,190,120,190,180,170,160,150,200,110,130,140))
d <- read.csv('../Dades/recorre_arbres.csv')
mod1 <- lm(Temps~as.factor(metode),d)
summary(mod1)
# Premissa normalitat residus
qqnorm(resid(mod1))
qqline(resid(mod1))
# Premsissa homoscedasticitat
boxplot(lgt~nodes,d)
# Premisses
par(mfrow=c(2,2))
plot(mod2,ask=FALSE)
##-- Model amb nodes
mod2 <- lm(Temps~nodes,d)
summary(mod2)
plot(Temps~nodes,d)
plot(Temps~nodes,d)
par(mfrow=c(2,2))
plot(mod2,ask=FALSE)
##-- Model complert
mod3 <- lm(Temps~nodes + as.factor(metode),d)
summary(mod2)
summary(mod3)
par(mfrow=c(2,2))
plot(mod3,ask=FALSE)
plot(mod,ask=FALSE)
##-- Benzina -------------------------------------------------------------------
d <- read.csv('../Dades/benzina_velocitat.csv')
# Model
mod <- lm(fuel~speed,d)
summary(mod)
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
abline(mod,lwd=2,col='red')
# Grafic
plot(fuel~speed,d, pch=19, col='blue')
abline(mod,lwd=2,col='red')
# Grafic
par(mfrow=c(1,1))
plot(fuel~speed,d, pch=19, col='blue')
abline(mod,lwd=2,col='red')
d <- read.csv('../Dades/cervesa_alcohol.csv')
# Model
mod <- lm(alc~n.cerv,d)
summary(mod)
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
mod <- lm(Durada~Brillantor,d)
summary(mod)
d <- read.csv('../Dades/brillantor_durada.csv')
# Model
mod <- lm(Durada~Brillantor,d)
summary(mod)
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
rm(list=ls())
##-- Paquets -------------------------------------------------------------------
library(emmeans)
##-- Temps compressors ---------------------------------------------------------
d <- read.csv('../Dades/temps_compressors.csv')
mod <- lm(temps~1,d)
summary(mod)
# Premissa normalitat
qqnorm(d$temps)
qqline(d$temps)
##-- Algoritme Dijkstra --------------------------------------------------------
d <- read.csv('../Dades/algoritme_dijkstra.csv')
mod <- lm(lgt~as.factor(nodes),d)
summary(mod)
# Premissa normalitat
qqnorm(d$lgt)
qqline(d$lgt)
# Premsissa homoscedasticitat
boxplot(lgt~nodes,d)
# IC95% per les mitjanes dels temps dels nodes
emmeans(mod,~nodes)
##-- Recorre arbres ------------------------------------------------------------
d <- read.csv('../Dades/recorre_arbres.csv')
##-- Model amb metode
mod1 <- lm(Temps~as.factor(metode),d)
summary(mod1)
# Premissa normalitat residus
qqnorm(resid(mod1))
qqline(resid(mod1))
# Premsissa homoscedasticitat
boxplot(lgt~nodes,d)
##-- Model amb nodes
mod2 <- lm(Temps~nodes,d)
summary(mod2)
plot(Temps~nodes,d)
# Premisses
par(mfrow=c(2,2))
plot(mod2,ask=FALSE)
##-- Model complert
mod3 <- lm(Temps~nodes + as.factor(metode),d)
summary(mod3)
# Premisses
par(mfrow=c(2,2))
plot(mod3,ask=FALSE)
##-- Benzina -------------------------------------------------------------------
d <- read.csv('../Dades/benzina_velocitat.csv')
# Model
mod <- lm(fuel~speed,d)
summary(mod)
# Grafic
par(mfrow=c(1,1))
plot(fuel~speed,d, pch=19, col='blue')
abline(mod,lwd=2,col='red')
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
##-- Cervesa alcohol -----------------------------------------------------------
d <- read.csv('../Dades/cervesa_alcohol.csv')
# Model
mod <- lm(alc~n.cerv,d)
summary(mod)
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
##-- brillantor durada ---------------------------------------------------------
d <- read.csv('../Dades/brillantor_durada.csv')
# Model
mod <- lm(Durada~Brillantor,d)
summary(mod)
# Premisses
par(mfrow=c(2,2))
plot(mod,ask=FALSE)
par(mfrow=c(1,1))
plot(Durada~Brillantor,d, pch=19, col='blue')
abline(mod,lwd=2,col='red')
################################################################################
# Llegir les dades
# mida: mida original del fitxer
# tar:  mida del fitxer despres de comprimir amb tar
# zip:  mida del fitxer despres de comprimir amb zip
# type: tipus de fitxer
################################################################################
d <- read.table('../Dades/compresors.csv',sep=',',header=TRUE, stringsAsFactors = TRUE)
################################################################################
# Llegir les dades
# mida: mida original del fitxer
# tar:  mida del fitxer despres de comprimir amb tar
# zip:  mida del fitxer despres de comprimir amb zip
# type: tipus de fitxer
################################################################################
d <- read.table('../Dades/mida_compressors.csv',sep=',',header=TRUE, stringsAsFactors = TRUE)
summary(d)
d <- read.csv('../Dades/iris.csv')
library(FactoMineR)
iris <- read.csv('../Dades/iris.csv')
PCA(iris,quali.sup=c(5: 5))
par(mfrow=c(1,2))
PCA(iris,quali.sup=c(5: 5))
# Clustering jeràrquic
HCPC(pca.iris)
# Analisi de components principals
(pca.iris <- PCA(iris,quali.sup=c(5: 5)))
# Clustering jeràrquic
HCPC(pca.iris)
# Clustering jeràrquic
(hcpc.iris <- HCPC(pca.iris))
table(hcpc.iris$data.clust[,ncol(hcpc.iris$data.clust)],iris$Species)
table(hcpc.iris$data.clust[,ncol(hcpc.iris$data.clust)],iris$Species)
# Clustering jerarquic
(hcpc.iris <- HCPC(pca.iris)) # S ha de clicar en el grafic
table(hcpc.iris$data.clust[,ncol(hcpc.iris$data.clust)],iris$Species)
# Clustering jerarquic
(hcpc.iris <- HCPC(pca.iris)) # S ha de clicar en el grafic
table(hcpc.iris$data.clust[,ncol(hcpc.iris$data.clust)],iris$Species)
# Clustering jerarquic
(hcpc.iris <- HCPC(pca.iris)) # S ha de clicar en el grafic
# Clustering jerarquic
(hcpc.iris <- HCPC(pca.iris)) # S ha de clicar en el grafic
# Clustering jerarquic
(hcpc.iris <- HCPC(pca.iris)) # S ha de clicar en el grafic
# K-means
km.iris <- kmeans(iris2,centers=3,nstart=10)
table(km.iris$cluster,iris$Species)
# K-means
iris2 <- iris[,1:4]
km.iris <- kmeans(iris2,centers=3,nstart=10)
table(km.iris$cluster,iris$Species)
##-- Llegir dades --------------------------------------------------------------
# load(url("https://www-eio.upc.edu/teaching/pe/DADES/jetstream.Rdata"))
load("../dades/jetstream.Rdata")
dim(C)
##-- Analisi de components principals ------------------------------------------
pca = PCA(C[,-c(3:4)], quali.sup=1:2, quanti.sup=3)
##-- Analisi de components principals ------------------------------------------
pca = PCA(C[,-c(3:4)], quali.sup=1:2, quanti.sup=3)
